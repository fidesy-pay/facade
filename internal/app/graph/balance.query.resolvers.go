package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"
	"fmt"

	"github.com/fidesy-pay/facade/internal/pkg/model"
	crypto_service "github.com/fidesy-pay/facade/pkg/crypto-service"
)

// Balances is the resolver for the balances field.
func (r *queryResolver) Balances(ctx context.Context, filter model.BalancesFilter) (*model.BalancesPagination, error) {
	if len(filter.AddressIn) == 0 {
		return &model.BalancesPagination{}, nil
	}

	balanceResp, err := r.cryptoServiceClient.GetBalance(ctx, &crypto_service.GetBalanceRequest{
		Address: filter.AddressIn[0],
		Chain:   "polygon-network",
		Token:   "matic",
	})
	if err != nil {
		return nil, fmt.Errorf("cryptoServiceClient.GetBalance: %w", err)
	}

	return &model.BalancesPagination{
		Balances: []float64{balanceResp.GetBalance()},
	}, nil
}
