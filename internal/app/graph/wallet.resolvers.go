package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"
	"fmt"

	"github.com/fidesy-pay/facade/internal/app/graph/generated"
	"github.com/fidesy-pay/facade/internal/pkg/model"
	crypto_service "github.com/fidesy-pay/facade/pkg/crypto-service"
)

// Balance is the resolver for the balance field.
func (r *walletResolver) Balance(ctx context.Context, obj *crypto_service.Wallet) (float64, error) {
	balance, err := r.Query().Balance(ctx, model.BalanceFilter{
		AddressEq: obj.Address,
		ChainEq:   obj.Chain,
		TokenEq:   "matic",
	})
	if err != nil {
		return 0, fmt.Errorf("Query().Balance: %w", err)
	}

	return balance.Balance, nil
}

// Wallet returns generated.WalletResolver implementation.
func (r *Resolver) Wallet() generated.WalletResolver { return &walletResolver{r} }

type walletResolver struct{ *Resolver }
