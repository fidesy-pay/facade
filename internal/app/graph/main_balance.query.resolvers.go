package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.38

import (
	"context"
	"fmt"
	"sync"

	"github.com/fidesy-pay/facade/internal/pkg/middleware/auth"
	"github.com/fidesy-pay/facade/internal/pkg/model"
	cryptoservice "github.com/fidesy-pay/facade/internal/pkg/services/crypto-service"
	crypto_service "github.com/fidesy-pay/facade/pkg/crypto-service"
	"golang.org/x/sync/errgroup"
)

// MainBalance is the resolver for the mainBalance field.
func (r *queryResolver) MainBalance(ctx context.Context) (*model.MainBalance, error) {
	session := auth.GetSession(ctx)

	walletsResp, err := r.cryptoServiceClient.ListWallets(ctx, &crypto_service.ListWalletsRequest{
		Filter: &crypto_service.ListWalletsRequest_Filter{
			ClientIdIn: []string{session.ClientID},
		},
	})
	if err != nil {
		return nil, fmt.Errorf("cryptoServiceClient.ListWallets: %w", err)
	}

	var (
		totalBalance float64
		mu           sync.Mutex
		errGroup     errgroup.Group
	)

	for _, wallet := range walletsResp.GetWallets() {
		wallet := wallet

		for _, token := range chainTokens[wallet.GetChain()] {
			token := token
			errGroup.Go(func() error {
				balance, err := r.cryptoService.GetBalance(ctx, cryptoservice.GetBalanceParams{
					Address: wallet.Address,
					Chain:   wallet.Chain,
					Token:   token,
				})
				if err != nil {
					return fmt.Errorf("cryptoService.GetBalance: %w", err)
				}

				mu.Lock()
				totalBalance += balance.UsdBalance
				mu.Unlock()

				return nil
			})
		}
	}

	err = errGroup.Wait()
	if err != nil {
		return nil, err
	}

	return &model.MainBalance{
		UsdBalance: totalBalance,
	}, nil
}

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
var chainTokens = map[string][]string{
	"polygon": {
		"matic-network",
	},
	"arbitrum": {
		"ethereum",
	},
}
